[{"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/index.tsx":"1","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/App.tsx":"2","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/fighter-list.tsx":"3","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/page-not-found.tsx":"4","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/fighter-detail.tsx":"5","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/fighter-add.tsx":"6","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/fighter-edit.tsx":"7","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/login.tsx":"8","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/services/authentication-service.ts":"9","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/services/fighter-service.ts":"10","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/helpers/format-type.ts":"11","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/helpers/format-date.ts":"12","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/fighter-card.tsx":"13","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/loader.tsx":"14","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/fighter-search.tsx":"15","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/fighter-form.tsx":"16","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/config.ts":"17","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/context/context.ts":"18","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/privateRouteAll.tsx":"19","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/privateRouteManager.tsx":"20","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/header.tsx":"21"},{"size":154,"mtime":1617725448022,"results":"22","hashOfConfig":"23"},{"size":2040,"mtime":1618424300117,"results":"24","hashOfConfig":"23"},{"size":1241,"mtime":1618421653974,"results":"25","hashOfConfig":"23"},{"size":622,"mtime":1617725448026,"results":"26","hashOfConfig":"23"},{"size":2882,"mtime":1618414014965,"results":"27","hashOfConfig":"23"},{"size":536,"mtime":1618413830678,"results":"28","hashOfConfig":"23"},{"size":1003,"mtime":1618414039717,"results":"29","hashOfConfig":"23"},{"size":5031,"mtime":1618356710933,"results":"30","hashOfConfig":"23"},{"size":2301,"mtime":1618421753130,"results":"31","hashOfConfig":"23"},{"size":2197,"mtime":1618414096117,"results":"32","hashOfConfig":"23"},{"size":766,"mtime":1617725448022,"results":"33","hashOfConfig":"23"},{"size":163,"mtime":1617725448022,"results":"34","hashOfConfig":"23"},{"size":1539,"mtime":1618413223429,"results":"35","hashOfConfig":"23"},{"size":581,"mtime":1617725448022,"results":"36","hashOfConfig":"23"},{"size":1345,"mtime":1618413950465,"results":"37","hashOfConfig":"23"},{"size":9861,"mtime":1618413898514,"results":"38","hashOfConfig":"23"},{"size":170,"mtime":1618274969945,"results":"39","hashOfConfig":"23"},{"size":237,"mtime":1618356033307,"results":"40","hashOfConfig":"23"},{"size":519,"mtime":1618415521089,"results":"41","hashOfConfig":"23"},{"size":440,"mtime":1618415533297,"results":"42","hashOfConfig":"23"},{"size":1282,"mtime":1618424289037,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1wux9qq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/index.tsx",[],["91","92"],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/App.tsx",["93"],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/fighter-list.tsx",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/page-not-found.tsx",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/fighter-detail.tsx",["94"],"import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport formatDate from '../helpers/format-date'\nimport formatType from '../helpers/format-type'\nimport FighterService from '../services/fighter-service';\nimport Loader from '../components/loader';\nimport { Fighter } from './fighter-list';\n  \ntype Params = { id: string };\n  \nconst FightersDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [fighter, setfighter] = useState<Fighter|null>(null);\n  \n  useEffect(() => {\n    FighterService.getFighter(+match.params.id)\n    .then(fighter => setfighter(fighter))\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { fighter ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ fighter.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image \">\n                <img src={fighter.picture} alt={fighter.name} style={{width: '210px', margin: '0 auto'}}/>\n                <Link to={`/fighters/edit/${fighter._id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                  <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              \n              <div className=\"card-stacked\">\n                <div className=\"card-content \">\n                  <table className=\"bordered striped \">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ fighter.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ fighter.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ fighter.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {fighter.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        {/* <td>{formatDate(fighter.created)}</td>  */}\n                      </tr>\n                    </tbody>\n                  </table>\n                  <div className=\"card-action \">\n                    <Link to=\"/\">Retour</Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default FightersDetail;\n","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/fighter-add.tsx",["95","96"],"import React, { FunctionComponent, useState } from 'react';\nimport FighterForm from '../components/fighter-form';\n \n  \nconst FighterAdd: FunctionComponent = () => {\n    \n  const [id]      = useState<number>(new Date().getTime());\n  // const [fighter] = useState<Fighter>(new Fighter(id));\n  \n  return (\n        <div className=\"row\">\n            <h2 className=\"header center\">Ajouter un fighter </h2>\n            {/* <FighterForm fighter={fighter} isEditForm={false}></FighterForm> */}\n        </div>\n  );\n}\n  \nexport default FighterAdd;","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/fighter-edit.tsx",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/pages/login.tsx",["97","98","99"],"import React, { FunctionComponent, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport context from '../context/context';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  email: any,\n  password: any\n  error?: any,\n  isValid?: any\n}\n\nconst Login: FunctionComponent = () => {\n\n  \n  const [form, setForm] = useState<Form>({\n    email: \"\" ,\n    password:\"\",\n  });\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté');\n  const {isAuthenticatedUser, setIsAuthenticatedUser} = useContext(context)\n  const {isAuthenticatedManager, setIsAuthenticatedManager} = useContext(context)\n  \n  const history = useHistory();\n  \n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator email\n    if(form.email.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.email, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.email, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.email.isValid && newForm.password.isValid;\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField = { [fieldName]:  fieldValue  };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const handleSubmit = async(e: any) => {\n    e.preventDefault();\n    \n    // const isFormValid = validateForm();\n    \n    try {\n      setMessage('👉 Tentative de connexion en cours ...');\n      await AuthenticationService.login(form)\n        .then(res => {\n          setIsAuthenticatedUser(true)\n        })\n        .catch(err => console.log(err))\n        \n        const isAuthenticatedM = await AuthenticationService.isAuthenticatedManager\n\n        setIsAuthenticatedManager(isAuthenticatedM)\n\n        history.replace('/fighters');\n\n    } catch (error) {\n      setMessage('🔐 Identifiant ou mot de passe incorrect.');\n      console.log(error);\n      \n    }\n\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field email */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Identifiant</label>\n                  <input \n                    id=\"email\" \n                    type=\"email\" \n                    name=\"email\" \n                    placeholder=\"Votre email\"\n                    className=\"form-control\" \n                    value={form.email} \n                    onChange={e => handleInputChange(e)}\n                  ></input>\n                  {/* error */}\n                  {form.email.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.email.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input \n                    id=\"password\" \n                    type=\"password\" \n                    name=\"password\" \n                    placeholder=\"votre mot de passe\"\n                    className=\"form-control\" \n                    value={form.password.value} \n                    onChange={e => handleInputChange(e)}\n                  ></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/services/authentication-service.ts",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/services/fighter-service.ts",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/helpers/format-type.ts",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/helpers/format-date.ts",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/fighter-card.tsx",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/loader.tsx",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/fighter-search.tsx",["100"],"import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Fighter } from '../pages/fighter-list'\nimport FighterService from '../services/fighter-service';\n \nconst FighterSearch: FunctionComponent = () => {\n  \n  const [term, setTerm]         = useState<string>('');\n  const [fighters, setFighters] = useState<Fighter[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n    \n    if(term.length <= 1) {\n        setFighters([]);\n        return;\n    }\n    \n    FighterService.searchFighter(term).then(fighters => setFighters(fighters) );\n}\n\n  return (\n    <div className=\"row\" > \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un fighter\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection' >\n        {fighters.map((fighter) => (\n          <Link key={fighter._id} to={`/fighters/${fighter._id}`} className=\"collection-item\" >\n            {fighter.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default FighterSearch;","/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/fighter-form.tsx",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/config.ts",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/context/context.ts",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/privateRouteAll.tsx",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/privateRouteManager.tsx",[],"/home/djepeno/Bureau/site/Projets_MERN/DragonballZ_MERN/src/components/header.tsx",["101","102","103","104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},{"ruleId":"110","severity":1,"message":"114","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":19},{"ruleId":"110","severity":1,"message":"116","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":12},{"ruleId":"110","severity":1,"message":"117","line":27,"column":10,"nodeType":"112","messageId":"113","endLine":27,"endColumn":29},{"ruleId":"110","severity":1,"message":"118","line":28,"column":10,"nodeType":"112","messageId":"113","endLine":28,"endColumn":32},{"ruleId":"110","severity":1,"message":"119","line":32,"column":9,"nodeType":"112","messageId":"113","endLine":32,"endColumn":21},{"ruleId":"110","severity":1,"message":"120","line":1,"column":36,"nodeType":"112","messageId":"113","endLine":1,"endColumn":45},{"ruleId":"110","severity":1,"message":"121","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":34},{"ruleId":"110","severity":1,"message":"122","line":1,"column":36,"nodeType":"112","messageId":"113","endLine":1,"endColumn":44},{"ruleId":"110","severity":1,"message":"120","line":1,"column":46,"nodeType":"112","messageId":"113","endLine":1,"endColumn":55},{"ruleId":"110","severity":1,"message":"123","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"124","line":9,"column":33,"nodeType":"112","messageId":"113","endLine":9,"endColumn":55},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'formatDate' is defined but never used.","'FighterForm' is defined but never used.","'id' is assigned a value but never used.","'isAuthenticatedUser' is assigned a value but never used.","'isAuthenticatedManager' is assigned a value but never used.","'validateForm' is assigned a value but never used.","'useEffect' is defined but never used.","'FunctionComponent' is defined but never used.","'useState' is defined but never used.","'RouteComponentProps' is defined but never used.","'setIsAuthenticatedUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]